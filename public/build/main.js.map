{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/surveys.service.ts","./src/app/drill-hole-list/drill-hole-list.component.ts","./src/app/drill-hole-list/drill-hole-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/drill-hole-detail/drill-hole-detail.component.ts","./src/app/drill-hole-detail/drill-hole-detail.component.html","./src/app/drill-hole-container/drill-hole-container.component.ts","./src/app/drill-hole-container/drill-hole-container.component.html","./src/app/app.module.ts","./src/app/pipes/depth-accuracy.pipe.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Drillhole } from '../models/drillhole.model';\nimport { Depthreading } from '../models/depthreading.model';\nimport { Surveys } from '../drill-hole-detail/drill-hole-detail.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurveysService {\n\n  constructor(private http:HttpClient) { }\n\n  getDrillHoles(): Observable<Drillhole[]> {\n    return this.http.get<Drillhole[]>('/api/holes');\n  }\n\n  getCollarPositions(hole_id:number, forPage:number = 1): Observable<Surveys> {\n    return this.http.get<Surveys>(`/api/positions/${hole_id}?page=${forPage}`);\n  }\n\n  postDepthReadings(reading:Depthreading): Observable<Depthreading> {\n    return this.http.put<Depthreading>(`/api/reading/${reading.id}`, {reading: reading});\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Drillhole } from '../models/drillhole.model';\nimport { SurveysService } from '../services/surveys.service';\n\n@Component({\n  selector: 'app-drill-hole-list',\n  templateUrl: './drill-hole-list.component.html',\n  styleUrls: ['./drill-hole-list.component.scss']\n})\nexport class DrillHoleListComponent implements OnInit {\n\n  holes:any;\n  active_link:any;\n  constructor(private resource:SurveysService) { }\n\n  ngOnInit(): void {\n    this.resource.getDrillHoles()\n    .subscribe(data =>{\n      this.holes = data;\n    });\n\n  }\n\n  @Output()\n  rowClick = new EventEmitter();\n  \n  onclick(id: number) {\n    this.active_link = id;\n    this.Emit(id);\n  }\n\n  private Emit(id:number){\n    this.rowClick.next(id);\n  }\n\n}\n","<div class=\"card mb-3\">\n    <div class=\"card-header text-white bg-info rounded-0\">\n        <p class=\"card-title\"><strong>Drill Holes</strong><br><small>Select a drill hole to view survey details</small></p>\n    </div>\n    <ul class=\"list-group list-group-flush\">\n        <li class=\"list-group-item list-group-item-action\" [ngClass]=\"{'active':active_link==h.id}\"  *ngFor=\"let h of holes\">\n            <a href=\"#\" (click)=\"onclick(h.id); (false)\">{{ h.name }}</a>\n        </li>\n    </ul>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app-front-end';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { Collarposition } from '../models/collarposition.model';\nimport { Depthreading } from '../models/depthreading.model';\nimport { SurveysService } from '../services/surveys.service';\n\n@Component({\n  selector: 'app-drill-hole-detail',\n  templateUrl: './drill-hole-detail.component.html',\n  styleUrls: ['./drill-hole-detail.component.scss']\n})\nexport class DrillHoleDetailComponent implements OnInit {\n  hole$ : Observable<Surveys> | undefined;\n  selected_hole:any;\n  readings:any;\n  constructor(private route: ActivatedRoute, private resource:SurveysService, private modalService: NgbModal) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params=>{\n      let hole = this.selected_hole = params.id;\n      this.hole$ = this.resource.getCollarPositions(+hole).pipe(shareReplay());\n    });\n  }\n\n  onPageChange(page:any){\n    this.hole$ = this.resource.getCollarPositions(this.selected_hole, page).pipe(shareReplay());\n  }\n\n  onToggleAccuracy(reading:Depthreading){\n    this.resource.postDepthReadings(reading).subscribe(data=>{reading.accurate = !reading.accurate})\n  }\n\n  showDepthDetails(content: any, details:any) {\n    this.readings = details;\n    this.modalService.open(content).result.then((result) => {\n      \n    }, (reason) => {\n      \n    });\n  }\n\n}\n\n//this should really be exported from a resources namespace\nexport class Surveys{\n  public per_page: any;\n  public current_page: any;\n  public total: any;\n  public data : Collarposition[] | undefined;\n}","<table class=\"table\" *ngIf=\"(hole$ | async) as surveys\">\n    <tfoot>\n        <tr>\n            <td colspan=\"5\" class=\"bg-light p-3\">\n                <ngb-pagination class=\"float-right\"\n                [(page)]=\"surveys.current_page\"\n                [pageSize]=\"surveys.per_page\"\n                [collectionSize]=\"surveys.total\"\n                (pageChange)=\"onPageChange($event)\"></ngb-pagination>\n            </td>\n        </tr>\n    </tfoot>\n    <thead>\n        <tr>\n            <td colspan=\"5\" class=\"bg-light p-3\">\n                <small>Click on the <b>view depth readings</b> link to view related depth readings.</small>\n            </td>\n        </tr>\n        <tr>\n          <th scope=\"col\">Latitude</th>\n          <th scope=\"col\">Longitude</th>\n          <th scope=\"col\">Dip</th>\n          <th scope=\"col\">Azimuth</th>\n          <th scope=\"col\">&nbsp;</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let survey of surveys.data\">\n          <td>{{survey.latitude}}</td>\n          <td>{{survey.longitude}}</td>\n          <td>{{survey.dip}}</td>\n          <td>{{survey.azimuth}}</td>\n          <td><a href=\"#\" (click)=\"showDepthDetails(content, survey.readings); (false)\">View depth readings</a></td>\n        </tr>\n      </tbody>\n </table>\n\n <!--Depths Model-->\n <ng-template #content let-modal>\n     <div class=\"modal-header bg-dark text-white\">\n         <h5>Depth Readings</h5>\n     </div>\n    <div class=\"modal-body\">\n        <div class=\"bg-light p-3\">\n            <small>Clicking on the confidence rating below will switch the rating between <b>good</b> or <b>poor</b>.</small>\n        </div>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                  <th scope=\"col\">Depth</th>\n                  <th scope=\"col\">Dip</th>\n                  <th scope=\"col\">Azimuth</th>\n                  <th scope=\"col\">Confidence</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let reading of readings\">\n                  <td>{{reading.depth}}</td>\n                  <td>{{reading.dip}}</td>\n                  <td>{{reading.azimuth}}</td>\n                  <td>\n                      <span (click)=\"onToggleAccuracy(reading)\"[innerHTML]=\"reading.accurate | depthAccuracy:reading\" ></span>\n                  </td>\n                </tr>\n              </tbody>\n         </table>\n    </div>\n    <div class=\"modal-footer bg-light\">\n      <button type=\"button\" class=\"btn btn-dark btn-sm\" (click)=\"modal.close('Save click')\">Close</button>\n    </div>\n  </ng-template>\n ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { filter, switchMap, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-drill-hole-container',\n  templateUrl: './drill-hole-container.component.html',\n  styleUrls: ['./drill-hole-container.component.scss']\n})\nexport class DrillHoleContainerComponent implements OnInit {\n\n  showDetails$: Observable<boolean> | undefined;\n  constructor(private route: ActivatedRoute, \n              private router: Router) {\n    this.onShowDetails();\n  }\n  public onRowClick(id: any) {\n    this.router.navigate([\"surveys\", id]);\n  }\n  \n  private onShowDetails() {\n    this.showDetails$ = this.router.events.pipe(\n      filter(e => e instanceof NavigationEnd),\n      switchMap(_ => {\n        return this.route.firstChild ?\n               this.route.firstChild.params : \n               of(false);\n        }),\n      map(params => !!params)\n    );\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container pt-3\">\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <app-drill-hole-list (rowClick)=\"onRowClick($event)\">\n            </app-drill-hole-list>\n        </div>\n        <div class=\"col-md-8\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DrillHoleContainerComponent } from './drill-hole-container/drill-hole-container.component';\nimport { DrillHoleListComponent } from './drill-hole-list/drill-hole-list.component';\nimport { DrillHoleDetailComponent } from './drill-hole-detail/drill-hole-detail.component';\nimport { HttpClientModule} from '@angular/common/http';\nimport { DepthAccuracyPipe } from './pipes/depth-accuracy.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DrillHoleContainerComponent,\n    DrillHoleListComponent,\n    DrillHoleDetailComponent,\n    DepthAccuracyPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'; \nimport { Depthreading } from '../models/depthreading.model';\n\n@Pipe({\n  name: 'depthAccuracy'\n})\nexport class DepthAccuracyPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) { } \n\n  transform(value: boolean, reading: Depthreading): SafeHtml {\n    let button:string = '';\n    if(value){\n      button = '<button class=\"btn btn-success btn-sm btn-block\">Good</button>'\n    }else{\n      button = '<button class=\"btn btn-danger btn-sm btn-block\">Poor</button>'\n    }\n    return this.sanitizer.bypassSecurityTrustHtml(button);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DrillHoleContainerComponent } from './drill-hole-container/drill-hole-container.component';\nimport { DrillHoleDetailComponent } from './drill-hole-detail/drill-hole-detail.component';\n\nconst routes: Routes = [\n  {\n    path: \"surveys\",\n    component: DrillHoleContainerComponent,\n    children: [\n    {\n      path: \":id\",\n      component: DrillHoleDetailComponent\n    }]\n  },\n  { path: \"**\", redirectTo: \"surveys\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}